/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RecipeManagerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RecipeManager");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuthorsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAuthorsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAuthorsAuthorParserRuleCall_3_0 = (RuleCall)cAuthorsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAuthorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAuthorsAuthorParserRuleCall_4_1_0 = (RuleCall)cAuthorsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRecipesKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cRecipesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cRecipesRecipeParserRuleCall_9_0 = (RuleCall)cRecipesAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cRecipesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cRecipesRecipeParserRuleCall_10_1_0 = (RuleCall)cRecipesAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//RecipeManager:
		//	'authors' ':' "{" authors+=Author (',' authors+=Author)* "}"
		//	'recipes' ':' '{' recipes+=Recipe (',' recipes+=Recipe)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'authors' ':' "{" authors+=Author (',' authors+=Author)* "}" 'recipes' ':' '{' recipes+=Recipe (',' recipes+=Recipe)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'authors'
		public Keyword getAuthorsKeyword_0() { return cAuthorsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//authors+=Author
		public Assignment getAuthorsAssignment_3() { return cAuthorsAssignment_3; }
		
		//Author
		public RuleCall getAuthorsAuthorParserRuleCall_3_0() { return cAuthorsAuthorParserRuleCall_3_0; }
		
		//(',' authors+=Author)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//authors+=Author
		public Assignment getAuthorsAssignment_4_1() { return cAuthorsAssignment_4_1; }
		
		//Author
		public RuleCall getAuthorsAuthorParserRuleCall_4_1_0() { return cAuthorsAuthorParserRuleCall_4_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//'recipes'
		public Keyword getRecipesKeyword_6() { return cRecipesKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//recipes+=Recipe
		public Assignment getRecipesAssignment_9() { return cRecipesAssignment_9; }
		
		//Recipe
		public RuleCall getRecipesRecipeParserRuleCall_9_0() { return cRecipesRecipeParserRuleCall_9_0; }
		
		//(',' recipes+=Recipe)*
		public Group getGroup_10() { return cGroup_10; }
		
		//','
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//recipes+=Recipe
		public Assignment getRecipesAssignment_10_1() { return cRecipesAssignment_10_1; }
		
		//Recipe
		public RuleCall getRecipesRecipeParserRuleCall_10_1_0() { return cRecipesRecipeParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class AuthorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Author");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEmailAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEmailSTRINGTerminalRuleCall_2_0 = (RuleCall)cEmailAssignment_2.eContents().get(0);
		
		//Author:
		//	name=ID ':' Email=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' Email=STRING
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//Email=STRING
		public Assignment getEmailAssignment_2() { return cEmailAssignment_2; }
		
		//STRING
		public RuleCall getEmailSTRINGTerminalRuleCall_2_0() { return cEmailSTRINGTerminalRuleCall_2_0; }
	}
	public class RatingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Rating");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cStarsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStarsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStarsINTTerminalRuleCall_3_0 = (RuleCall)cStarsAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommentKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cCommentAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cCommentSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cCommentAssignment_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cAuthorKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAuthorAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cAuthorAuthorCrossReference_8_0 = (CrossReference)cAuthorAssignment_8.eContents().get(0);
		private final RuleCall cAuthorAuthorIDTerminalRuleCall_8_0_1 = (RuleCall)cAuthorAuthorCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Rating:
		//	'{'
		//	'Stars' ':' stars=INT ',' ('Comment' ':' comment=STRING ',')?
		//	'Author' ':' author=[Author]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'Stars' ':' stars=INT ',' ('Comment' ':' comment=STRING ',')? 'Author' ':' author=[Author] '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'Stars'
		public Keyword getStarsKeyword_1() { return cStarsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//stars=INT
		public Assignment getStarsAssignment_3() { return cStarsAssignment_3; }
		
		//INT
		public RuleCall getStarsINTTerminalRuleCall_3_0() { return cStarsINTTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//('Comment' ':' comment=STRING ',')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Comment'
		public Keyword getCommentKeyword_5_0() { return cCommentKeyword_5_0; }
		
		//':'
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }
		
		//comment=STRING
		public Assignment getCommentAssignment_5_2() { return cCommentAssignment_5_2; }
		
		//STRING
		public RuleCall getCommentSTRINGTerminalRuleCall_5_2_0() { return cCommentSTRINGTerminalRuleCall_5_2_0; }
		
		//','
		public Keyword getCommaKeyword_5_3() { return cCommaKeyword_5_3; }
		
		//'Author'
		public Keyword getAuthorKeyword_6() { return cAuthorKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//author=[Author]
		public Assignment getAuthorAssignment_8() { return cAuthorAssignment_8; }
		
		//[Author]
		public CrossReference getAuthorAuthorCrossReference_8_0() { return cAuthorAuthorCrossReference_8_0; }
		
		//ID
		public RuleCall getAuthorAuthorIDTerminalRuleCall_8_0_1() { return cAuthorAuthorIDTerminalRuleCall_8_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class RecipeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Recipe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAuthorKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAuthorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cAuthorAuthorCrossReference_5_0 = (CrossReference)cAuthorAssignment_5.eContents().get(0);
		private final RuleCall cAuthorAuthorIDTerminalRuleCall_5_0_1 = (RuleCall)cAuthorAuthorCrossReference_5_0.eContents().get(1);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cVeganismLevelKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cVeganAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cVeganVeganismLevelParserRuleCall_9_0 = (RuleCall)cVeganAssignment_9.eContents().get(0);
		private final Keyword cCommaKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cDurationKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cDurationAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDurationINTTerminalRuleCall_13_0 = (RuleCall)cDurationAssignment_13.eContents().get(0);
		private final Keyword cCommaKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cDifficultyKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cColonKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cDifficultyAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cDifficultyINTTerminalRuleCall_17_0 = (RuleCall)cDifficultyAssignment_17.eContents().get(0);
		private final Keyword cCommaKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cKitchenUtensilsKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cColonKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_19_2 = (Keyword)cGroup_19.eContents().get(2);
		private final Assignment cKitchenUtensilsAssignment_19_3 = (Assignment)cGroup_19.eContents().get(3);
		private final RuleCall cKitchenUtensilsKitchenUtensilParserRuleCall_19_3_0 = (RuleCall)cKitchenUtensilsAssignment_19_3.eContents().get(0);
		private final Group cGroup_19_4 = (Group)cGroup_19.eContents().get(4);
		private final Keyword cCommaKeyword_19_4_0 = (Keyword)cGroup_19_4.eContents().get(0);
		private final Assignment cKitchenUtensilsAssignment_19_4_1 = (Assignment)cGroup_19_4.eContents().get(1);
		private final RuleCall cKitchenUtensilsKitchenUtensilParserRuleCall_19_4_1_0 = (RuleCall)cKitchenUtensilsAssignment_19_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_19_5 = (Keyword)cGroup_19.eContents().get(5);
		private final Keyword cCommaKeyword_19_6 = (Keyword)cGroup_19.eContents().get(6);
		private final Group cGroup_20 = (Group)cGroup.eContents().get(20);
		private final Keyword cFoodCategoryKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Keyword cColonKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_20_2 = (Keyword)cGroup_20.eContents().get(2);
		private final Assignment cFoodCategoryAssignment_20_3 = (Assignment)cGroup_20.eContents().get(3);
		private final RuleCall cFoodCategoryFoodCategoryParserRuleCall_20_3_0 = (RuleCall)cFoodCategoryAssignment_20_3.eContents().get(0);
		private final Group cGroup_20_4 = (Group)cGroup_20.eContents().get(4);
		private final Keyword cCommaKeyword_20_4_0 = (Keyword)cGroup_20_4.eContents().get(0);
		private final Assignment cFoodCategoryAssignment_20_4_1 = (Assignment)cGroup_20_4.eContents().get(1);
		private final RuleCall cFoodCategoryFoodCategoryParserRuleCall_20_4_1_0 = (RuleCall)cFoodCategoryAssignment_20_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_20_5 = (Keyword)cGroup_20.eContents().get(5);
		private final Keyword cCommaKeyword_20_6 = (Keyword)cGroup_20.eContents().get(6);
		private final Keyword cIngredientsKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cColonKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Keyword cLeftSquareBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Assignment cIngredientAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cIngredientIngredientParserRuleCall_24_0 = (RuleCall)cIngredientAssignment_24.eContents().get(0);
		private final Group cGroup_25 = (Group)cGroup.eContents().get(25);
		private final Keyword cCommaKeyword_25_0 = (Keyword)cGroup_25.eContents().get(0);
		private final Assignment cIngredientAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cIngredientIngredientParserRuleCall_25_1_0 = (RuleCall)cIngredientAssignment_25_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Group cGroup_27 = (Group)cGroup.eContents().get(27);
		private final Keyword cCommaKeyword_27_0 = (Keyword)cGroup_27.eContents().get(0);
		private final Keyword cRatingsKeyword_27_1 = (Keyword)cGroup_27.eContents().get(1);
		private final Keyword cColonKeyword_27_2 = (Keyword)cGroup_27.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_27_3 = (Keyword)cGroup_27.eContents().get(3);
		private final Assignment cRatingsAssignment_27_4 = (Assignment)cGroup_27.eContents().get(4);
		private final RuleCall cRatingsRatingParserRuleCall_27_4_0 = (RuleCall)cRatingsAssignment_27_4.eContents().get(0);
		private final Group cGroup_27_5 = (Group)cGroup_27.eContents().get(5);
		private final Keyword cCommaKeyword_27_5_0 = (Keyword)cGroup_27_5.eContents().get(0);
		private final Assignment cRatingsAssignment_27_5_1 = (Assignment)cGroup_27_5.eContents().get(1);
		private final RuleCall cRatingsRatingParserRuleCall_27_5_1_0 = (RuleCall)cRatingsAssignment_27_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_27_6 = (Keyword)cGroup_27.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_28 = (Keyword)cGroup.eContents().get(28);
		
		//Recipe:
		//	name=ID ':' '{'
		//	'Author' ':' author=[Author] ','
		//	'VeganismLevel' ':' vegan=VeganismLevel ','
		//	'Duration' ':' duration=INT ','
		//	'Difficulty' ':' difficulty=INT ',' ('KitchenUtensils' ':' '[' kitchenUtensils+=KitchenUtensil (','
		//	kitchenUtensils+=KitchenUtensil)* ']' ',')? ('foodCategory' ':' '[' foodCategory+=FoodCategory (','
		//	foodCategory+=FoodCategory)* ']' ',')?
		//	'Ingredients' ':' '[' ingredient+=Ingredient (',' ingredient+=Ingredient)* ']' (',' "Ratings" ":" "[" ratings+=Rating
		//	("," ratings+=Rating)* "]")?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' '{' 'Author' ':' author=[Author] ',' 'VeganismLevel' ':' vegan=VeganismLevel ',' 'Duration' ':' duration=INT
		//',' 'Difficulty' ':' difficulty=INT ',' ('KitchenUtensils' ':' '[' kitchenUtensils+=KitchenUtensil (','
		//kitchenUtensils+=KitchenUtensil)* ']' ',')? ('foodCategory' ':' '[' foodCategory+=FoodCategory (','
		//foodCategory+=FoodCategory)* ']' ',')? 'Ingredients' ':' '[' ingredient+=Ingredient (',' ingredient+=Ingredient)* ']'
		//(',' "Ratings" ":" "[" ratings+=Rating ("," ratings+=Rating)* "]")? '}'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'Author'
		public Keyword getAuthorKeyword_3() { return cAuthorKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//author=[Author]
		public Assignment getAuthorAssignment_5() { return cAuthorAssignment_5; }
		
		//[Author]
		public CrossReference getAuthorAuthorCrossReference_5_0() { return cAuthorAuthorCrossReference_5_0; }
		
		//ID
		public RuleCall getAuthorAuthorIDTerminalRuleCall_5_0_1() { return cAuthorAuthorIDTerminalRuleCall_5_0_1; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//'VeganismLevel'
		public Keyword getVeganismLevelKeyword_7() { return cVeganismLevelKeyword_7; }
		
		//':'
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }
		
		//vegan=VeganismLevel
		public Assignment getVeganAssignment_9() { return cVeganAssignment_9; }
		
		//VeganismLevel
		public RuleCall getVeganVeganismLevelParserRuleCall_9_0() { return cVeganVeganismLevelParserRuleCall_9_0; }
		
		//','
		public Keyword getCommaKeyword_10() { return cCommaKeyword_10; }
		
		//'Duration'
		public Keyword getDurationKeyword_11() { return cDurationKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//duration=INT
		public Assignment getDurationAssignment_13() { return cDurationAssignment_13; }
		
		//INT
		public RuleCall getDurationINTTerminalRuleCall_13_0() { return cDurationINTTerminalRuleCall_13_0; }
		
		//','
		public Keyword getCommaKeyword_14() { return cCommaKeyword_14; }
		
		//'Difficulty'
		public Keyword getDifficultyKeyword_15() { return cDifficultyKeyword_15; }
		
		//':'
		public Keyword getColonKeyword_16() { return cColonKeyword_16; }
		
		//difficulty=INT
		public Assignment getDifficultyAssignment_17() { return cDifficultyAssignment_17; }
		
		//INT
		public RuleCall getDifficultyINTTerminalRuleCall_17_0() { return cDifficultyINTTerminalRuleCall_17_0; }
		
		//','
		public Keyword getCommaKeyword_18() { return cCommaKeyword_18; }
		
		//('KitchenUtensils' ':' '[' kitchenUtensils+=KitchenUtensil (',' kitchenUtensils+=KitchenUtensil)* ']' ',')?
		public Group getGroup_19() { return cGroup_19; }
		
		//'KitchenUtensils'
		public Keyword getKitchenUtensilsKeyword_19_0() { return cKitchenUtensilsKeyword_19_0; }
		
		//':'
		public Keyword getColonKeyword_19_1() { return cColonKeyword_19_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_19_2() { return cLeftSquareBracketKeyword_19_2; }
		
		//kitchenUtensils+=KitchenUtensil
		public Assignment getKitchenUtensilsAssignment_19_3() { return cKitchenUtensilsAssignment_19_3; }
		
		//KitchenUtensil
		public RuleCall getKitchenUtensilsKitchenUtensilParserRuleCall_19_3_0() { return cKitchenUtensilsKitchenUtensilParserRuleCall_19_3_0; }
		
		//(',' kitchenUtensils+=KitchenUtensil)*
		public Group getGroup_19_4() { return cGroup_19_4; }
		
		//','
		public Keyword getCommaKeyword_19_4_0() { return cCommaKeyword_19_4_0; }
		
		//kitchenUtensils+=KitchenUtensil
		public Assignment getKitchenUtensilsAssignment_19_4_1() { return cKitchenUtensilsAssignment_19_4_1; }
		
		//KitchenUtensil
		public RuleCall getKitchenUtensilsKitchenUtensilParserRuleCall_19_4_1_0() { return cKitchenUtensilsKitchenUtensilParserRuleCall_19_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_19_5() { return cRightSquareBracketKeyword_19_5; }
		
		//','
		public Keyword getCommaKeyword_19_6() { return cCommaKeyword_19_6; }
		
		//('foodCategory' ':' '[' foodCategory+=FoodCategory (',' foodCategory+=FoodCategory)* ']' ',')?
		public Group getGroup_20() { return cGroup_20; }
		
		//'foodCategory'
		public Keyword getFoodCategoryKeyword_20_0() { return cFoodCategoryKeyword_20_0; }
		
		//':'
		public Keyword getColonKeyword_20_1() { return cColonKeyword_20_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_20_2() { return cLeftSquareBracketKeyword_20_2; }
		
		//foodCategory+=FoodCategory
		public Assignment getFoodCategoryAssignment_20_3() { return cFoodCategoryAssignment_20_3; }
		
		//FoodCategory
		public RuleCall getFoodCategoryFoodCategoryParserRuleCall_20_3_0() { return cFoodCategoryFoodCategoryParserRuleCall_20_3_0; }
		
		//(',' foodCategory+=FoodCategory)*
		public Group getGroup_20_4() { return cGroup_20_4; }
		
		//','
		public Keyword getCommaKeyword_20_4_0() { return cCommaKeyword_20_4_0; }
		
		//foodCategory+=FoodCategory
		public Assignment getFoodCategoryAssignment_20_4_1() { return cFoodCategoryAssignment_20_4_1; }
		
		//FoodCategory
		public RuleCall getFoodCategoryFoodCategoryParserRuleCall_20_4_1_0() { return cFoodCategoryFoodCategoryParserRuleCall_20_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_20_5() { return cRightSquareBracketKeyword_20_5; }
		
		//','
		public Keyword getCommaKeyword_20_6() { return cCommaKeyword_20_6; }
		
		//'Ingredients'
		public Keyword getIngredientsKeyword_21() { return cIngredientsKeyword_21; }
		
		//':'
		public Keyword getColonKeyword_22() { return cColonKeyword_22; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_23() { return cLeftSquareBracketKeyword_23; }
		
		//ingredient+=Ingredient
		public Assignment getIngredientAssignment_24() { return cIngredientAssignment_24; }
		
		//Ingredient
		public RuleCall getIngredientIngredientParserRuleCall_24_0() { return cIngredientIngredientParserRuleCall_24_0; }
		
		//(',' ingredient+=Ingredient)*
		public Group getGroup_25() { return cGroup_25; }
		
		//','
		public Keyword getCommaKeyword_25_0() { return cCommaKeyword_25_0; }
		
		//ingredient+=Ingredient
		public Assignment getIngredientAssignment_25_1() { return cIngredientAssignment_25_1; }
		
		//Ingredient
		public RuleCall getIngredientIngredientParserRuleCall_25_1_0() { return cIngredientIngredientParserRuleCall_25_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_26() { return cRightSquareBracketKeyword_26; }
		
		//(',' "Ratings" ":" "[" ratings+=Rating ("," ratings+=Rating)* "]")?
		public Group getGroup_27() { return cGroup_27; }
		
		//','
		public Keyword getCommaKeyword_27_0() { return cCommaKeyword_27_0; }
		
		//"Ratings"
		public Keyword getRatingsKeyword_27_1() { return cRatingsKeyword_27_1; }
		
		//":"
		public Keyword getColonKeyword_27_2() { return cColonKeyword_27_2; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_27_3() { return cLeftSquareBracketKeyword_27_3; }
		
		//ratings+=Rating
		public Assignment getRatingsAssignment_27_4() { return cRatingsAssignment_27_4; }
		
		//Rating
		public RuleCall getRatingsRatingParserRuleCall_27_4_0() { return cRatingsRatingParserRuleCall_27_4_0; }
		
		//("," ratings+=Rating)*
		public Group getGroup_27_5() { return cGroup_27_5; }
		
		//","
		public Keyword getCommaKeyword_27_5_0() { return cCommaKeyword_27_5_0; }
		
		//ratings+=Rating
		public Assignment getRatingsAssignment_27_5_1() { return cRatingsAssignment_27_5_1; }
		
		//Rating
		public RuleCall getRatingsRatingParserRuleCall_27_5_1_0() { return cRatingsRatingParserRuleCall_27_5_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_27_6() { return cRightSquareBracketKeyword_27_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_28() { return cRightCurlyBracketKeyword_28; }
	}
	public class KitchenUtensilElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.KitchenUtensil");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cNameAlternatives_0 = (Alternatives)cNameAssignment.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAlternatives_0.eContents().get(0);
		private final Keyword cNameFurnaceKeyword_0_1 = (Keyword)cNameAlternatives_0.eContents().get(1);
		private final Keyword cNameStovetopKeyword_0_2 = (Keyword)cNameAlternatives_0.eContents().get(2);
		private final Keyword cNameRollingPinKeyword_0_3 = (Keyword)cNameAlternatives_0.eContents().get(3);
		
		//KitchenUtensil:
		//	name=(STRING | 'furnace' | 'stovetop' | 'rolling pin');
		@Override public ParserRule getRule() { return rule; }
		
		//name=(STRING | 'furnace' | 'stovetop' | 'rolling pin')
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//(STRING | 'furnace' | 'stovetop' | 'rolling pin')
		public Alternatives getNameAlternatives_0() { return cNameAlternatives_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//'furnace'
		public Keyword getNameFurnaceKeyword_0_1() { return cNameFurnaceKeyword_0_1; }
		
		//'stovetop'
		public Keyword getNameStovetopKeyword_0_2() { return cNameStovetopKeyword_0_2; }
		
		//'rolling pin'
		public Keyword getNameRollingPinKeyword_0_3() { return cNameRollingPinKeyword_0_3; }
	}
	public class FoodCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FoodCategory");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//FoodCategory:
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class IngredientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Ingredient");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cNameKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cColonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cNameAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_3_0 = (RuleCall)cNameAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cAmountKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cColonKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cAmountAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cAmountINTTerminalRuleCall_0_7_0 = (RuleCall)cAmountAssignment_0_7.eContents().get(0);
		private final Keyword cCommaKeyword_0_8 = (Keyword)cGroup_0.eContents().get(8);
		private final Keyword cUnitKeyword_0_9 = (Keyword)cGroup_0.eContents().get(9);
		private final Keyword cColonKeyword_0_10 = (Keyword)cGroup_0.eContents().get(10);
		private final Assignment cUnitAssignment_0_11 = (Assignment)cGroup_0.eContents().get(11);
		private final RuleCall cUnitUnitParserRuleCall_0_11_0 = (RuleCall)cUnitAssignment_0_11.eContents().get(0);
		private final Keyword cCommaKeyword_0_12 = (Keyword)cGroup_0.eContents().get(12);
		private final Keyword cVeganismLevelKeyword_0_13 = (Keyword)cGroup_0.eContents().get(13);
		private final Keyword cColonKeyword_0_14 = (Keyword)cGroup_0.eContents().get(14);
		private final Assignment cVeganismLevelAssignment_0_15 = (Assignment)cGroup_0.eContents().get(15);
		private final RuleCall cVeganismLevelVeganismLevelParserRuleCall_0_15_0 = (RuleCall)cVeganismLevelAssignment_0_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_16 = (Keyword)cGroup_0.eContents().get(16);
		private final Assignment cRecipeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final CrossReference cRecipeRecipeCrossReference_1_0 = (CrossReference)cRecipeAssignment_1.eContents().get(0);
		private final RuleCall cRecipeRecipeIDTerminalRuleCall_1_0_1 = (RuleCall)cRecipeRecipeCrossReference_1_0.eContents().get(1);
		
		//Ingredient:
		//	'{'
		//	'Name' ':' name=STRING ','
		//	'Amount' ':' amount=INT ','
		//	'Unit' ':' unit=Unit ','
		//	'VeganismLevel' ':' veganismLevel=VeganismLevel
		//	'}'
		//	| recipe=[Recipe];
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'Name' ':' name=STRING ',' 'Amount' ':' amount=INT ',' 'Unit' ':' unit=Unit ',' 'VeganismLevel' ':'
		//veganismLevel=VeganismLevel '}' | recipe=[Recipe]
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'{' 'Name' ':' name=STRING ',' 'Amount' ':' amount=INT ',' 'Unit' ':' unit=Unit ',' 'VeganismLevel' ':'
		//veganismLevel=VeganismLevel '}'
		public Group getGroup_0() { return cGroup_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_0() { return cLeftCurlyBracketKeyword_0_0; }
		
		//'Name'
		public Keyword getNameKeyword_0_1() { return cNameKeyword_0_1; }
		
		//':'
		public Keyword getColonKeyword_0_2() { return cColonKeyword_0_2; }
		
		//name=STRING
		public Assignment getNameAssignment_0_3() { return cNameAssignment_0_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_3_0() { return cNameSTRINGTerminalRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'Amount'
		public Keyword getAmountKeyword_0_5() { return cAmountKeyword_0_5; }
		
		//':'
		public Keyword getColonKeyword_0_6() { return cColonKeyword_0_6; }
		
		//amount=INT
		public Assignment getAmountAssignment_0_7() { return cAmountAssignment_0_7; }
		
		//INT
		public RuleCall getAmountINTTerminalRuleCall_0_7_0() { return cAmountINTTerminalRuleCall_0_7_0; }
		
		//','
		public Keyword getCommaKeyword_0_8() { return cCommaKeyword_0_8; }
		
		//'Unit'
		public Keyword getUnitKeyword_0_9() { return cUnitKeyword_0_9; }
		
		//':'
		public Keyword getColonKeyword_0_10() { return cColonKeyword_0_10; }
		
		//unit=Unit
		public Assignment getUnitAssignment_0_11() { return cUnitAssignment_0_11; }
		
		//Unit
		public RuleCall getUnitUnitParserRuleCall_0_11_0() { return cUnitUnitParserRuleCall_0_11_0; }
		
		//','
		public Keyword getCommaKeyword_0_12() { return cCommaKeyword_0_12; }
		
		//'VeganismLevel'
		public Keyword getVeganismLevelKeyword_0_13() { return cVeganismLevelKeyword_0_13; }
		
		//':'
		public Keyword getColonKeyword_0_14() { return cColonKeyword_0_14; }
		
		//veganismLevel=VeganismLevel
		public Assignment getVeganismLevelAssignment_0_15() { return cVeganismLevelAssignment_0_15; }
		
		//VeganismLevel
		public RuleCall getVeganismLevelVeganismLevelParserRuleCall_0_15_0() { return cVeganismLevelVeganismLevelParserRuleCall_0_15_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_0_16() { return cRightCurlyBracketKeyword_0_16; }
		
		//recipe=[Recipe]
		public Assignment getRecipeAssignment_1() { return cRecipeAssignment_1; }
		
		//[Recipe]
		public CrossReference getRecipeRecipeCrossReference_1_0() { return cRecipeRecipeCrossReference_1_0; }
		
		//ID
		public RuleCall getRecipeRecipeIDTerminalRuleCall_1_0_1() { return cRecipeRecipeIDTerminalRuleCall_1_0_1; }
	}
	public class VeganismLevelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.VeganismLevel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cVeganKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cVegetaricKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cCarnivorousKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//VeganismLevel:
		//	'Vegan' | 'Vegetaric' | 'Carnivorous';
		@Override public ParserRule getRule() { return rule; }
		
		//'Vegan' | 'Vegetaric' | 'Carnivorous'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Vegan'
		public Keyword getVeganKeyword_0() { return cVeganKeyword_0; }
		
		//'Vegetaric'
		public Keyword getVegetaricKeyword_1() { return cVegetaricKeyword_1; }
		
		//'Carnivorous'
		public Keyword getCarnivorousKeyword_2() { return cCarnivorousKeyword_2; }
	}
	public class UnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Unit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cMlKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cLKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cGKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cKgKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cTspKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cMgKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cTbspKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cPcsKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		
		//Unit:
		//	'ml' | 'l' | 'g' | 'kg' | 'tsp' | 'mg' | 'tbsp' | 'pcs';
		@Override public ParserRule getRule() { return rule; }
		
		//'ml' | 'l' | 'g' | 'kg' | 'tsp' | 'mg' | 'tbsp' | 'pcs'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'ml'
		public Keyword getMlKeyword_0() { return cMlKeyword_0; }
		
		//'l'
		public Keyword getLKeyword_1() { return cLKeyword_1; }
		
		//'g'
		public Keyword getGKeyword_2() { return cGKeyword_2; }
		
		//'kg'
		public Keyword getKgKeyword_3() { return cKgKeyword_3; }
		
		//'tsp'
		public Keyword getTspKeyword_4() { return cTspKeyword_4; }
		
		//'mg'
		public Keyword getMgKeyword_5() { return cMgKeyword_5; }
		
		//'tbsp'
		public Keyword getTbspKeyword_6() { return cTbspKeyword_6; }
		
		//'pcs'
		public Keyword getPcsKeyword_7() { return cPcsKeyword_7; }
	}
	
	
	private final RecipeManagerElements pRecipeManager;
	private final AuthorElements pAuthor;
	private final RatingElements pRating;
	private final RecipeElements pRecipe;
	private final KitchenUtensilElements pKitchenUtensil;
	private final FoodCategoryElements pFoodCategory;
	private final IngredientElements pIngredient;
	private final VeganismLevelElements pVeganismLevel;
	private final UnitElements pUnit;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRecipeManager = new RecipeManagerElements();
		this.pAuthor = new AuthorElements();
		this.pRating = new RatingElements();
		this.pRecipe = new RecipeElements();
		this.pKitchenUtensil = new KitchenUtensilElements();
		this.pFoodCategory = new FoodCategoryElements();
		this.pIngredient = new IngredientElements();
		this.pVeganismLevel = new VeganismLevelElements();
		this.pUnit = new UnitElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RecipeManager:
	//	'authors' ':' "{" authors+=Author (',' authors+=Author)* "}"
	//	'recipes' ':' '{' recipes+=Recipe (',' recipes+=Recipe)* '}';
	public RecipeManagerElements getRecipeManagerAccess() {
		return pRecipeManager;
	}
	
	public ParserRule getRecipeManagerRule() {
		return getRecipeManagerAccess().getRule();
	}
	
	//Author:
	//	name=ID ':' Email=STRING;
	public AuthorElements getAuthorAccess() {
		return pAuthor;
	}
	
	public ParserRule getAuthorRule() {
		return getAuthorAccess().getRule();
	}
	
	//Rating:
	//	'{'
	//	'Stars' ':' stars=INT ',' ('Comment' ':' comment=STRING ',')?
	//	'Author' ':' author=[Author]
	//	'}';
	public RatingElements getRatingAccess() {
		return pRating;
	}
	
	public ParserRule getRatingRule() {
		return getRatingAccess().getRule();
	}
	
	//Recipe:
	//	name=ID ':' '{'
	//	'Author' ':' author=[Author] ','
	//	'VeganismLevel' ':' vegan=VeganismLevel ','
	//	'Duration' ':' duration=INT ','
	//	'Difficulty' ':' difficulty=INT ',' ('KitchenUtensils' ':' '[' kitchenUtensils+=KitchenUtensil (','
	//	kitchenUtensils+=KitchenUtensil)* ']' ',')? ('foodCategory' ':' '[' foodCategory+=FoodCategory (','
	//	foodCategory+=FoodCategory)* ']' ',')?
	//	'Ingredients' ':' '[' ingredient+=Ingredient (',' ingredient+=Ingredient)* ']' (',' "Ratings" ":" "[" ratings+=Rating
	//	("," ratings+=Rating)* "]")?
	//	'}';
	public RecipeElements getRecipeAccess() {
		return pRecipe;
	}
	
	public ParserRule getRecipeRule() {
		return getRecipeAccess().getRule();
	}
	
	//KitchenUtensil:
	//	name=(STRING | 'furnace' | 'stovetop' | 'rolling pin');
	public KitchenUtensilElements getKitchenUtensilAccess() {
		return pKitchenUtensil;
	}
	
	public ParserRule getKitchenUtensilRule() {
		return getKitchenUtensilAccess().getRule();
	}
	
	//FoodCategory:
	//	name=STRING;
	public FoodCategoryElements getFoodCategoryAccess() {
		return pFoodCategory;
	}
	
	public ParserRule getFoodCategoryRule() {
		return getFoodCategoryAccess().getRule();
	}
	
	//Ingredient:
	//	'{'
	//	'Name' ':' name=STRING ','
	//	'Amount' ':' amount=INT ','
	//	'Unit' ':' unit=Unit ','
	//	'VeganismLevel' ':' veganismLevel=VeganismLevel
	//	'}'
	//	| recipe=[Recipe];
	public IngredientElements getIngredientAccess() {
		return pIngredient;
	}
	
	public ParserRule getIngredientRule() {
		return getIngredientAccess().getRule();
	}
	
	//VeganismLevel:
	//	'Vegan' | 'Vegetaric' | 'Carnivorous';
	public VeganismLevelElements getVeganismLevelAccess() {
		return pVeganismLevel;
	}
	
	public ParserRule getVeganismLevelRule() {
		return getVeganismLevelAccess().getRule();
	}
	
	//Unit:
	//	'ml' | 'l' | 'g' | 'kg' | 'tsp' | 'mg' | 'tbsp' | 'pcs';
	public UnitElements getUnitAccess() {
		return pUnit;
	}
	
	public ParserRule getUnitRule() {
		return getUnitAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
