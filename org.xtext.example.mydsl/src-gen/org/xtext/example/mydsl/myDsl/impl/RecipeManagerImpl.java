/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.Authorblock;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.RecipeManager;
import org.xtext.example.mydsl.myDsl.Recipeblock;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Recipe Manager</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.RecipeManagerImpl#getAuthorblock <em>Authorblock</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.RecipeManagerImpl#getRecipeblock <em>Recipeblock</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RecipeManagerImpl extends MinimalEObjectImpl.Container implements RecipeManager
{
  /**
   * The cached value of the '{@link #getAuthorblock() <em>Authorblock</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthorblock()
   * @generated
   * @ordered
   */
  protected Authorblock authorblock;

  /**
   * The cached value of the '{@link #getRecipeblock() <em>Recipeblock</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecipeblock()
   * @generated
   * @ordered
   */
  protected Recipeblock recipeblock;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RecipeManagerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.RECIPE_MANAGER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Authorblock getAuthorblock()
  {
    return authorblock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAuthorblock(Authorblock newAuthorblock, NotificationChain msgs)
  {
    Authorblock oldAuthorblock = authorblock;
    authorblock = newAuthorblock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK, oldAuthorblock, newAuthorblock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAuthorblock(Authorblock newAuthorblock)
  {
    if (newAuthorblock != authorblock)
    {
      NotificationChain msgs = null;
      if (authorblock != null)
        msgs = ((InternalEObject)authorblock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK, null, msgs);
      if (newAuthorblock != null)
        msgs = ((InternalEObject)newAuthorblock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK, null, msgs);
      msgs = basicSetAuthorblock(newAuthorblock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK, newAuthorblock, newAuthorblock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Recipeblock getRecipeblock()
  {
    return recipeblock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRecipeblock(Recipeblock newRecipeblock, NotificationChain msgs)
  {
    Recipeblock oldRecipeblock = recipeblock;
    recipeblock = newRecipeblock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK, oldRecipeblock, newRecipeblock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRecipeblock(Recipeblock newRecipeblock)
  {
    if (newRecipeblock != recipeblock)
    {
      NotificationChain msgs = null;
      if (recipeblock != null)
        msgs = ((InternalEObject)recipeblock).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK, null, msgs);
      if (newRecipeblock != null)
        msgs = ((InternalEObject)newRecipeblock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK, null, msgs);
      msgs = basicSetRecipeblock(newRecipeblock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK, newRecipeblock, newRecipeblock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK:
        return basicSetAuthorblock(null, msgs);
      case MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK:
        return basicSetRecipeblock(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK:
        return getAuthorblock();
      case MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK:
        return getRecipeblock();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK:
        setAuthorblock((Authorblock)newValue);
        return;
      case MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK:
        setRecipeblock((Recipeblock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK:
        setAuthorblock((Authorblock)null);
        return;
      case MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK:
        setRecipeblock((Recipeblock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RECIPE_MANAGER__AUTHORBLOCK:
        return authorblock != null;
      case MyDslPackage.RECIPE_MANAGER__RECIPEBLOCK:
        return recipeblock != null;
    }
    return super.eIsSet(featureID);
  }

} //RecipeManagerImpl
