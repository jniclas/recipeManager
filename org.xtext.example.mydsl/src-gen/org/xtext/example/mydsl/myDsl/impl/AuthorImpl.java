/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Author;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Rating;
import org.xtext.example.mydsl.myDsl.Recipe;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Author</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AuthorImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AuthorImpl#getEmail <em>Email</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AuthorImpl#getIsOwner <em>Is Owner</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AuthorImpl#getWrites <em>Writes</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.AuthorImpl#getCalls <em>Calls</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AuthorImpl extends MinimalEObjectImpl.Container implements Author
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getEmail() <em>Email</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmail()
   * @generated
   * @ordered
   */
  protected static final String EMAIL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEmail() <em>Email</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmail()
   * @generated
   * @ordered
   */
  protected String email = EMAIL_EDEFAULT;

  /**
   * The cached value of the '{@link #getIsOwner() <em>Is Owner</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsOwner()
   * @generated
   * @ordered
   */
  protected EList<Recipe> isOwner;

  /**
   * The cached value of the '{@link #getWrites() <em>Writes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWrites()
   * @generated
   * @ordered
   */
  protected EList<Rating> writes;

  /**
   * The cached value of the '{@link #getCalls() <em>Calls</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCalls()
   * @generated
   * @ordered
   */
  protected EList<Recipe> calls;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AuthorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.AUTHOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.AUTHOR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEmail()
  {
    return email;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEmail(String newEmail)
  {
    String oldEmail = email;
    email = newEmail;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.AUTHOR__EMAIL, oldEmail, email));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Recipe> getIsOwner()
  {
    if (isOwner == null)
    {
      isOwner = new EObjectResolvingEList<Recipe>(Recipe.class, this, MyDslPackage.AUTHOR__IS_OWNER);
    }
    return isOwner;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Rating> getWrites()
  {
    if (writes == null)
    {
      writes = new EObjectContainmentEList<Rating>(Rating.class, this, MyDslPackage.AUTHOR__WRITES);
    }
    return writes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Recipe> getCalls()
  {
    if (calls == null)
    {
      calls = new EObjectResolvingEList<Recipe>(Recipe.class, this, MyDslPackage.AUTHOR__CALLS);
    }
    return calls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.AUTHOR__WRITES:
        return ((InternalEList<?>)getWrites()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.AUTHOR__NAME:
        return getName();
      case MyDslPackage.AUTHOR__EMAIL:
        return getEmail();
      case MyDslPackage.AUTHOR__IS_OWNER:
        return getIsOwner();
      case MyDslPackage.AUTHOR__WRITES:
        return getWrites();
      case MyDslPackage.AUTHOR__CALLS:
        return getCalls();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.AUTHOR__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.AUTHOR__EMAIL:
        setEmail((String)newValue);
        return;
      case MyDslPackage.AUTHOR__IS_OWNER:
        getIsOwner().clear();
        getIsOwner().addAll((Collection<? extends Recipe>)newValue);
        return;
      case MyDslPackage.AUTHOR__WRITES:
        getWrites().clear();
        getWrites().addAll((Collection<? extends Rating>)newValue);
        return;
      case MyDslPackage.AUTHOR__CALLS:
        getCalls().clear();
        getCalls().addAll((Collection<? extends Recipe>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.AUTHOR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.AUTHOR__EMAIL:
        setEmail(EMAIL_EDEFAULT);
        return;
      case MyDslPackage.AUTHOR__IS_OWNER:
        getIsOwner().clear();
        return;
      case MyDslPackage.AUTHOR__WRITES:
        getWrites().clear();
        return;
      case MyDslPackage.AUTHOR__CALLS:
        getCalls().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.AUTHOR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.AUTHOR__EMAIL:
        return EMAIL_EDEFAULT == null ? email != null : !EMAIL_EDEFAULT.equals(email);
      case MyDslPackage.AUTHOR__IS_OWNER:
        return isOwner != null && !isOwner.isEmpty();
      case MyDslPackage.AUTHOR__WRITES:
        return writes != null && !writes.isEmpty();
      case MyDslPackage.AUTHOR__CALLS:
        return calls != null && !calls.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", Email: ");
    result.append(email);
    result.append(')');
    return result.toString();
  }

} //AuthorImpl
