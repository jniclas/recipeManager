/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Inject
	private MyDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getKitchenUtensilAccess().getNameAlternatives_0(), "rule__KitchenUtensil__NameAlternatives_0");
					put(grammarAccess.getDifficultyLevelAccess().getNameAlternatives_0(), "rule__DifficultyLevel__NameAlternatives_0");
					put(grammarAccess.getIngredientAccess().getAlternatives(), "rule__Ingredient__Alternatives");
					put(grammarAccess.getVeganismLevelAccess().getAlternatives(), "rule__VeganismLevel__Alternatives");
					put(grammarAccess.getUnitAccess().getAlternatives(), "rule__Unit__Alternatives");
					put(grammarAccess.getEOLAccess().getAlternatives(), "rule__EOL__Alternatives");
					put(grammarAccess.getRecipeManagerAccess().getGroup(), "rule__RecipeManager__Group__0");
					put(grammarAccess.getRecipeManagerAccess().getGroup_4(), "rule__RecipeManager__Group_4__0");
					put(grammarAccess.getAuthorAccess().getGroup(), "rule__Author__Group__0");
					put(grammarAccess.getRatingAccess().getGroup(), "rule__Rating__Group__0");
					put(grammarAccess.getRecipeAccess().getGroup(), "rule__Recipe__Group__0");
					put(grammarAccess.getRecipeAccess().getGroup_15(), "rule__Recipe__Group_15__0");
					put(grammarAccess.getRecipeAccess().getGroup_20(), "rule__Recipe__Group_20__0");
					put(grammarAccess.getRecipeAccess().getGroup_26(), "rule__Recipe__Group_26__0");
					put(grammarAccess.getRecipeAccess().getGroup_31(), "rule__Recipe__Group_31__0");
					put(grammarAccess.getIngredientAccess().getGroup_0(), "rule__Ingredient__Group_0__0");
					put(grammarAccess.getRecipeManagerAccess().getAuthorsAssignment_2(), "rule__RecipeManager__AuthorsAssignment_2");
					put(grammarAccess.getRecipeManagerAccess().getAuthorsAssignment_3(), "rule__RecipeManager__AuthorsAssignment_3");
					put(grammarAccess.getRecipeManagerAccess().getRecipesAssignment_4_2(), "rule__RecipeManager__RecipesAssignment_4_2");
					put(grammarAccess.getRecipeManagerAccess().getRecipesAssignment_4_3(), "rule__RecipeManager__RecipesAssignment_4_3");
					put(grammarAccess.getAuthorAccess().getNameAssignment_0(), "rule__Author__NameAssignment_0");
					put(grammarAccess.getAuthorAccess().getEmailAssignment_1(), "rule__Author__EmailAssignment_1");
					put(grammarAccess.getRatingAccess().getStarsAssignment_0(), "rule__Rating__StarsAssignment_0");
					put(grammarAccess.getRatingAccess().getCommentAssignment_2(), "rule__Rating__CommentAssignment_2");
					put(grammarAccess.getRatingAccess().getAuthorAssignment_4(), "rule__Rating__AuthorAssignment_4");
					put(grammarAccess.getRecipeAccess().getNameAssignment_0(), "rule__Recipe__NameAssignment_0");
					put(grammarAccess.getRecipeAccess().getAuthorAssignment_2(), "rule__Recipe__AuthorAssignment_2");
					put(grammarAccess.getRecipeAccess().getVeganAssignment_4(), "rule__Recipe__VeganAssignment_4");
					put(grammarAccess.getRecipeAccess().getDurationAssignment_6(), "rule__Recipe__DurationAssignment_6");
					put(grammarAccess.getRecipeAccess().getDifficultyAssignment_9(), "rule__Recipe__DifficultyAssignment_9");
					put(grammarAccess.getRecipeAccess().getKitchenUtensilsAssignment_13(), "rule__Recipe__KitchenUtensilsAssignment_13");
					put(grammarAccess.getRecipeAccess().getKitchenUtensilsAssignment_15_0(), "rule__Recipe__KitchenUtensilsAssignment_15_0");
					put(grammarAccess.getRecipeAccess().getFoodCategoryAssignment_18(), "rule__Recipe__FoodCategoryAssignment_18");
					put(grammarAccess.getRecipeAccess().getFoodCategoryAssignment_20_0(), "rule__Recipe__FoodCategoryAssignment_20_0");
					put(grammarAccess.getRecipeAccess().getIngredientAssignment_24(), "rule__Recipe__IngredientAssignment_24");
					put(grammarAccess.getRecipeAccess().getIngredientAssignment_26_1(), "rule__Recipe__IngredientAssignment_26_1");
					put(grammarAccess.getRecipeAccess().getRatingsAssignment_29(), "rule__Recipe__RatingsAssignment_29");
					put(grammarAccess.getRecipeAccess().getRatingsAssignment_31_0(), "rule__Recipe__RatingsAssignment_31_0");
					put(grammarAccess.getKitchenUtensilAccess().getNameAssignment(), "rule__KitchenUtensil__NameAssignment");
					put(grammarAccess.getDifficultyLevelAccess().getNameAssignment(), "rule__DifficultyLevel__NameAssignment");
					put(grammarAccess.getFoodCategoryAccess().getNameAssignment(), "rule__FoodCategory__NameAssignment");
					put(grammarAccess.getIngredientAccess().getNameAssignment_0_0(), "rule__Ingredient__NameAssignment_0_0");
					put(grammarAccess.getIngredientAccess().getAmountAssignment_0_1(), "rule__Ingredient__AmountAssignment_0_1");
					put(grammarAccess.getIngredientAccess().getUnitAssignment_0_2(), "rule__Ingredient__UnitAssignment_0_2");
					put(grammarAccess.getIngredientAccess().getVeganismLevelAssignment_0_4(), "rule__Ingredient__VeganismLevelAssignment_0_4");
					put(grammarAccess.getIngredientAccess().getRecipeAssignment_1(), "rule__Ingredient__RecipeAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
